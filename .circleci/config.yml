version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

workflows:
  build:  # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run. 
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows 
    jobs:
      - build

jobs:
  build:
    docker:
      - image: cimg/python:3.8
      - image: circleci/postgres:9.6.9-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo apt-get update && sudo apt-get install -y gdal-bin python3-gdal
            python3 -m venv ../venv
            . ../venv/bin/activate
            pip install -r requirements.txt
            cd ..
            mv project passive_data_kit
            mkdir django
            cd django
            django-admin.py startproject pdk
            mv ../passive_data_kit pdk
            cd pdk
            ls
            pwd
            cp passive_data_kit/circle_settings.py pdk/settings.py
            python manage.py migrate
            python manage.py test
            cp passive_data_kit/.pylintrc .
            pylint passive_data_kit
            bandit -r .            
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - store_artifacts:
          path: test-reports/
          destination: python_app
